<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Online Peers</title>
    <link rel="icon" href="/favicon.ico" type="image/png">
    <script src="https://cdn.tailwindcss.com"></script>
	<script src="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.0.3"></script>

</head>
<body class="bg-gray-900 flex items-center justify-center min-h-screen text-white">
    
    <nav class="bg-gray-900 text-white p-4 shadow-lg fixed top-0 left-0 right-0 z-50">
        <div class="container mx-auto flex flex-wrap justify-between items-center">
            <a href="/" class="text-lg font-bold">42_Friend</a>
            <div class="text-center">
                Active Users: <%= totalActiveUser %>
            </div>
            <div class="space-x-4 flex flex-wrap items-center">
                <a href="/about" class="hover:text-blue-400">About Me</a>
                <a href="/" class="hover:text-blue-400">Home</a>
                <a href="/profile" class="hover:text-blue-400">Profile</a>
                <a href="/logout" class="text-red-400 hover:text-red-600">Logout</a>
                <a href="https://github.com/rameshtim/42_friend" target="_blank" 
                    class="bg-gray-800 px-4 py-2 rounded-lg flex items-center hover:bg-blue-500 transition">
                    <i class="ph ph-github-logo text-xl mr-2"></i>Contribute
                </a>
            </div>
        </div>
    </nav>

    <div class="pt-20 w-full max-w-4xl px-4">
        
        <div class="flex flex-col sm:flex-row justify-between items-start mb-4">
            <a href="/profile" class="text-blue-500 hover:text-blue-700 font-bold">Back to Profile</a>
            <div>
                <h3 class="text-lg font-semibold">Live Notifications</h3>
                <ul id="notificationList" class="mt-2 space-y-2"></ul>
            </div>
        </div>
        <div id="profilePopup" class="fixed top-20 right-5 p-4 rounded-lg text-white shadow-lg bg-gray-800 hidden w-80">
            <button onclick="closePopup()" class="absolute top-2 right-2 text-red-400 hover:text-red-600">âœ–</button>
            <div id="profileContent" class="p-2"></div>
        </div>

        <div class="mt-6 p-4 bg-gray-700 rounded-lg shadow-inner w-full max-w-3xl">
            <h1 class="text-lg font-semibold">Online Peers</h1>
            <ul class="mt-2 space-y-2 overflow-x-auto" id="peerList">
                <% peers.forEach(peer => { %>
                    <li class="flex flex-col sm:flex-row items-center justify-between bg-gray-800 p-4 rounded-lg shadow-md peer-item space-y-2 sm:space-y-0" data-username="<%= peer.username %>">
                        <div class="flex items-center space-x-4 peer-link cursor-pointer" data-username="<%= peer.username %>">
                            <% if (peer.level >= 10) { %>
                                <% if (peer.grade === 'Member') { %>
                                    <span class="text-green-500" title="Outer Circle">
                                        &#10004; </span>
                                <% } else { %>
                                    <span class="text-yellow-500" title="Still needs to pass the exam">
                                        &#x2753; </span>
                                <% } %>
                            <% } else { %>
                                <span></span>
                            <% } %>
                            <img src="<%= peer.image %>" alt="Profile Picture" class="w-10 h-10 sm:w-12 sm:h-12 rounded-full">
                            <div class="text-center sm:text-left">
                                <h2 class="text-lg font-semibold"><%= peer.displayname %></h2>
                                <p class="text-gray-400">@<%= peer.username %>, Level: <%= peer.level %></p>
                            </div>
                        </div>
                        <div class="flex space-x-4 w-full sm:w-auto justify-center sm:justify-end">
                            <button onclick="openSlack('<%= peer.username %>')" 
                                class="bg-blue-500 hover:bg-blue-600 text-white font-medium py-1.5 px-3 rounded-md text-sm shadow-sm transition w-full sm:w-auto">
                                DM on Slack
                            </button>
                            <button onclick="checkUserProfile('<%= peer.username %>', this, 1)" 
                                class="bg-purple-500 hover:bg-purple-600 text-white font-medium py-1.5 px-3 rounded-md text-sm shadow-sm transition w-full sm:w-auto">
                                Check Projects
                            </button>
                            <div id="loadingIndicator1" class="hidden text-center my-4">
                                <div class="animate-spin rounded-full h-10 w-10 border-t-4 border-blue-500 mx-auto"></div>
                                <p class="text-gray-400 mt-2">Loading Projects...</p>
                            </div>
                        </div>
                    </li>
                <% }); %>
            </ul>
            <button onclick="toggleRecentPeers(this)" 
                class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg mt-3 transition w-full sm:w-auto">
                Show Recently Active Users
            </button>

            <% if (peers.length === 0) { %>
                <div id="imageSection" class="text-center text-gray-400 mt-6">
                    <p class="text-xl">ðŸ˜¢ It seems no one is at school.</p>
                    <img src="/empty_classroom.avif" 
                    alt="Empty classroom with computers" 
                    class="mx-auto mt-4 rounded-lg shadow-lg">
                </div>
            <% } %>
        </div>

        <div id="recentPeersSection" class="hidden mt-6 p-4 bg-gray-700 rounded-lg shadow-inner w-full max-w-3xl">
            <h3 class="text-lg font-semibold">Recently Active Users (Last 7 Days)</h3>
            <ul class="mt-2 space-y-2 overflow-x-auto" id="rpeerList">
                <% recentPeers.forEach(user => { %>
                    <li class="flex flex-col sm:flex-row items-center justify-between bg-gray-800 p-4 rounded-lg shadow-md rpeer-item space-y-2 sm:space-y-0" data-username="<%= user.username %>">
                        <div class="flex items-center space-x-4 user-link cursor-pointer" data-username="<%= user.username %>">
                            <% if (user.level >= 10) { %>
                                <% if (user.grade === 'Member') { %>
                                    <span class="text-green-500" title="Outer Circle">
                                        &#10004; </span>
                                <% } else { %>
                                    <span class="text-yellow-500" title="Still needs to pass the exam">
                                        &#x2753; </span>
                                <% } %>
                            <% } else { %>
                                <span></span>
                            <% } %>
                            <img src="<%= user.image %>" class="w-10 h-10 sm:w-12 sm:h-12 rounded-full" alt="<%= user.username %>">
                            <div class="text-center sm:text-left">
                                <h2 class="text-lg font-semibold"><%= user.displayname %></h2>
                                <p class="text-gray-400">@<%= user.username %>, Level: <%= user.level %> <br> (Last Seen: <%= user.last_seen %>, <%= user.days_ago %> ) at <%= user.formatted_time %></p>
                            </div>
                        </div>
                        <div class="flex space-x-4 w-full sm:w-auto justify-center sm:justify-end">
                            <button onclick="startMonitoring('<%= user.username %>')" 
                                class="bg-green-500 hover:bg-green-600 text-white font-medium py-1.5 px-3 rounded-md text-sm shadow-sm transition w-full sm:w-auto">
                                Start Monitoring
                            </button>
                            <button onclick="openSlack('<%= user.username %>')" 
                                class="bg-blue-500 hover:bg-blue-600 text-white font-medium py-1.5 px-3 rounded-md text-sm shadow-sm transition w-full sm:w-auto">
                                DM on Slack
                            </button>
                            <button onclick="checkUserProfile('<%= user.username %>', this, 2)" 
                                class="bg-purple-500 hover:bg-purple-600 text-white font-medium py-1.5 px-3 rounded-md text-sm shadow-sm transition w-full sm:w-auto">
                                Check Projects
                            </button>
                            <div id="loadingIndicator2" class=" hidden text-center my-1 flex" >
                                <div class="animate-spin rounded-full h-10 w-10 border-t-4 border-blue-500 mx-auto"></div>
                                <p class="text-gray-400 mt-2">Loading Projects...</p>
                            </div>
                        </div>
                    </li>
                <% }); %>
            </ul>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const peerLinks = document.querySelectorAll('.peer-link, .user-link');

            peerLinks.forEach(link => {
                link.addEventListener('click', function() {
                    const username = this.dataset.username;
                    window.open(`https://profile.intra.42.fr/users/${username}`, '_blank', 'noopener,noreferrer');
                });
            });
        });

        function startMonitoring(username) {
            fetch("/send-email", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                credentials: 'include',
                body: JSON.stringify({ username })
            })
            .then(response => {
                // Handle redirect manually without following it
                if (response.redirected) {
                    const urlParams = new URL(response.url).searchParams;
                    const message = urlParams.get("message"); // Extract the success message
                    const error = urlParams.get("error");
                    if (message) {
                        showPopup(message + ' <br> Your <b>monitoring list</b> will be shown in your <a href="/profile" style="font-size: 1.1em; font-weight: bold; color: white; text-decoration: underline;">profile page</a>.', true);
                    } else if (error) {
                        showPopup(error, false);
                    }
                }
                const peerItem = document.querySelector(`.peer-item[data-username="${username}"]`);
                const rpeerItem = document.querySelector(`.rpeer-item[data-username="${username}"]`);
                if (peerItem) {
                    console.log("hiding button for ", username);
                    peerItem.style.opacity = "0"; // Fade out first
                    setTimeout(() => peerItem.style.display = "none", 300); // Then hide it
                }
                if (rpeerItem) {
                    console.log("hiding button for ", username);
                    rpeerItem.style.opacity = "0"; // Fade out first
                    setTimeout(() => rpeerItem.style.display = "none", 300); // Then hide it
                }
            })
            .catch(error => {
                showPopup("Error starting monitoring: " + error, false);
            });
        }

        // Function to show a pop-up notification
        function showPopup(message, success) {
			const popup = document.createElement("div");
			popup.innerText = message;

			popup.className = `fixed top-20 right-5 p-4 rounded-lg text-white shadow-lg transition-opacity duration-300 ease-in-out
				${success ? "bg-green-500" : "bg-red-500"} opacity-0`;

			document.body.appendChild(popup);

			// Fade in effect
			setTimeout(() => {
				popup.classList.add("opacity-100");
			}, 50);

			// Remove after timeout
			setTimeout(() => {
				popup.classList.remove("opacity-100");
				setTimeout(() => popup.remove(), 300);
			}, 3000);
		}


        function toggleRecentPeers(button) {
            const recentPeersSection = document.getElementById("recentPeersSection");
            const imageSection = document.getElementById("imageSection");

            recentPeersSection.classList.toggle("hidden");

            if (imageSection) {
                imageSection.style.display = "none";
            }

            if (recentPeersSection.classList.contains("hidden")) {
                button.textContent = "Show Recently Active Users";
            } else {
                button.textContent = "Hide Recently Active Users";
            }
        }

        function openSlack(slackUsername) {
          const slackUrl = `https://42born2code.slack.com/team/selected_team_id=T039P7U66&u=${slackUsername}`; // Include the message
      
          window.open(slackUrl, '_blank'); // Open in a new tab/window
        }

        function checkUserProfile(username, button, num) {
            if (num === 1) {
                button.parentElement.querySelector('#loadingIndicator1').classList.remove("hidden");
            } else {
                button.parentElement.querySelector('#loadingIndicator2').classList.remove("hidden");
            }
            fetch("/check-user", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                credentials: "include",
                body: JSON.stringify({ username })
            })
            .then(response => response.text())  // Get the HTML response
            .then(html => {
                // Parse the HTML response
                let parser = new DOMParser();
                let doc = parser.parseFromString(html, "text/html");

                // Extract the projectsInfo data from the rendered HTML
                let projectElements = doc.querySelectorAll("ul.mt-1.text-center li");
                if (projectElements.length === 0) {
                    showPopupProj(button, "No active projects found.", false);
                    return;
                }

                // Convert project list into formatted HTML
                let projectList = Array.from(projectElements).map(el => el.outerHTML).join("");

                let popupContent = `
                    <div class="mt-2 p-3 bg-gray-700 rounded-lg shadow-lg text-white w-64">
                        <h3 class="text-lg font-semibold text-center">Active Projects</h3>
                        <ul class="mt-2">${projectList}</ul>
                    </div>
                `;
                if (num === 1) {
                    button.parentElement.querySelector('#loadingIndicator1').classList.add("hidden");
                } else {
                    button.parentElement.querySelector('#loadingIndicator2').classList.add("hidden");
                }
                showPopupProj(button, popupContent, true);
            })
            .catch(error => {
                document.getElementById("loadingIndicator1").classList.add("hidden"); // Show loading spinner
                document.getElementById("loadingIndicator2").classList.add("hidden"); // Show loading spinner
                showPopupProj(button, "Error fetching projects." + error, false);
            });
        }

        function showPopupProj(button, content, isHTML = false) {
            // Remove any existing popups
            document.querySelectorAll(".profile-popup").forEach(el => el.remove());

            let popup = document.createElement("div");
            popup.className = "absolute profile-popup bg-gray-800 text-white p-3 rounded-lg shadow-lg";
            popup.style.position = "absolute";
            popup.style.top = `${button.offsetTop - 60}px`;
            popup.style.left = `${button.offsetLeft}px`;

            // Create close button
            let closeButton = document.createElement("button");
            closeButton.innerHTML = "&times;"; // "Ã—" character
            closeButton.className = "absolute top-1 right-1 text-red-500 hover:text-red-700 font-bold text-xl p-2 rounded-full bg-gray-700 bg-opacity-50";
            closeButton.onclick = function() {
                popup.remove();
            };

            // Add content
            if (isHTML) {
                popup.innerHTML = content;
            } else {
                popup.innerText = content;
            }

            // Append close button and content to popup
            popup.appendChild(closeButton);
            button.parentNode.appendChild(popup);

            // Set timeout for automatic removal
            let timeoutId = setTimeout(() => popup.remove(), 30000);

            // Override the timeout if the close button is clicked.
            closeButton.onclick = function() {
                clearTimeout(timeoutId);
                popup.remove();
            };
        }
    </script>
</body>
</html>
